// @ts-nocheck
/* eslint-disable */
// --------------------------------------------------
// This file is auto-generated by Tuyau. Do not edit manually !
// --------------------------------------------------

import type { MakeTuyauRequest, MakeTuyauResponse } from '@tuyau/utils/types'
import type { InferInput } from '@vinejs/vine/types'

type AuthRegisterGetHead = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/auth_controller.ts').default['register'],
    false
  >
}
type AuthRegisterPost = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/auth_controller.ts').default['postRegister'],
    false
  >
}
type AuthLoginGetHead = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/auth_controller.ts').default['login'],
    false
  >
}
type AuthLoginPost = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/auth_controller.ts').default['postLogin'],
    false
  >
}
type AuthLogoutGetHead = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/auth_controller.ts').default['logout'],
    false
  >
}
type AdminGetHead = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/home_controller.ts').default['index'],
    false
  >
}
type AdminUsersMeGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/users_controller.ts').default['me'], false>
}
type AdminUsersGetHead = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/users_controller.ts').default['index'],
    false
  >
}
type AdminUsersPost = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/users_controller.ts').default['postCreate'],
    false
  >
}
type AdminUsersIdDelete = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/users_controller.ts').default['postDelete'],
    false
  >
}
type AdminUsersIdPatch = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/users_controller.ts').default['postUpdate'],
    false
  >
}
type AdminProductcategoriesGetHead = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/product_categories_controller.ts').default['index'],
    false
  >
}
type AdminProductcategoriesCreateGetHead = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/product_categories_controller.ts').default['create'],
    false
  >
}
type AdminProductcategoriesCreatePost = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/product_categories_controller.ts').default['postCreate'],
    false
  >
}
type AdminProductcategoriesIdGetHead = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/product_categories_controller.ts').default['detail'],
    false
  >
}
type AdminProductcategoriesIdEditGetHead = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/product_categories_controller.ts').default['edit'],
    false
  >
}
type AdminProductcategoriesIdPatch = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/product_categories_controller.ts').default['postEdit'],
    false
  >
}
type AdminProductcategoriesIdDelete = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/product_categories_controller.ts').default['postDelete'],
    false
  >
}
type AdminFilemanagersGetHead = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/file_managers_controller.ts').default['list'],
    false
  >
}
type AdminFilemanagersIdDelete = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/file_managers_controller.ts').default['destroy'],
    false
  >
}
type AdminFilemanagersUploadPost = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/file_managers_controller.ts').default['upload'],
    false
  >
}
type AdminFilemanagersIdGetHead = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/file_managers_controller.ts').default['getById'],
    false
  >
}
type AdminInputfieldsGetHead = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/input_fields_controller.ts').default['index'],
    false
  >
}
type AdminInputfieldsPost = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/input_fields_controller.ts').default['postCreate'],
    false
  >
}
type AdminInputfieldsAllGetHead = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/input_fields_controller.ts').default['getAllInputFields'],
    false
  >
}
type AdminInputfieldsConnectPost = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/input_fields_controller.ts').default['postConnect'],
    false
  >
}
type AdminInputfieldsDisconnectIdDelete = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/input_fields_controller.ts').default['postDisconnect'],
    false
  >
}
type AdminInputfieldsIdPatch = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/input_fields_controller.ts').default['postUpdate'],
    false
  >
}
type AdminInputfieldsIdDelete = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/input_fields_controller.ts').default['postDelete'],
    false
  >
}
type AdminProductsubcategoriesPost = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/product_sub_categories_controller.ts').default['postCreate'],
    false
  >
}
type AdminProductsubcategoriesIdGetHead = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/product_sub_categories_controller.ts').default['detail'],
    false
  >
}
type AdminProductsubcategoriesIdPatch = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/product_sub_categories_controller.ts').default['postUpdate'],
    false
  >
}
type AdminProductsubcategoriesIdDelete = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/product_sub_categories_controller.ts').default['postDelete'],
    false
  >
}
type AdminProductsPost = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/products_controller.ts').default['postCreate'],
    false
  >
}
type AdminProductsAllGetHead = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/products_controller.ts').default['getAll'],
    false
  >
}
type AdminProductsIdGetHead = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/products_controller.ts').default['detail'],
    false
  >
}
type AdminProductsIdPatch = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/products_controller.ts').default['postUpdate'],
    false
  >
}
type AdminProductsIdDelete = {
  request: unknown
  response: MakeTuyauResponse<
    import('../app/controllers/products_controller.ts').default['postDelete'],
    false
  >
}
export interface ApiDefinition {
  auth: {
    register: {
      $url: {}
      $get: AuthRegisterGetHead
      $head: AuthRegisterGetHead
      $post: AuthRegisterPost
    }
    login: {
      $url: {}
      $get: AuthLoginGetHead
      $head: AuthLoginGetHead
      $post: AuthLoginPost
    }
    logout: {
      $url: {}
      $get: AuthLogoutGetHead
      $head: AuthLogoutGetHead
    }
  }
  admin: {
    '$url': {}
    '$get': AdminGetHead
    '$head': AdminGetHead
    'users': {
      'me': {
        $url: {}
        $get: AdminUsersMeGetHead
        $head: AdminUsersMeGetHead
      }
      '$url': {}
      '$get': AdminUsersGetHead
      '$head': AdminUsersGetHead
      '$post': AdminUsersPost
      ':id': {
        $url: {}
        $delete: AdminUsersIdDelete
        $patch: AdminUsersIdPatch
      }
    }
    'product-categories': {
      '$url': {}
      '$get': AdminProductcategoriesGetHead
      '$head': AdminProductcategoriesGetHead
      'create': {
        $url: {}
        $get: AdminProductcategoriesCreateGetHead
        $head: AdminProductcategoriesCreateGetHead
        $post: AdminProductcategoriesCreatePost
      }
      ':id': {
        $url: {}
        $get: AdminProductcategoriesIdGetHead
        $head: AdminProductcategoriesIdGetHead
        edit: {
          $url: {}
          $get: AdminProductcategoriesIdEditGetHead
          $head: AdminProductcategoriesIdEditGetHead
        }
        $patch: AdminProductcategoriesIdPatch
        $delete: AdminProductcategoriesIdDelete
      }
    }
    'file-managers': {
      '$url': {}
      '$get': AdminFilemanagersGetHead
      '$head': AdminFilemanagersGetHead
      ':id': {
        $url: {}
        $delete: AdminFilemanagersIdDelete
        $get: AdminFilemanagersIdGetHead
        $head: AdminFilemanagersIdGetHead
      }
      'upload': {
        $url: {}
        $post: AdminFilemanagersUploadPost
      }
    }
    'input-fields': {
      '$url': {}
      '$get': AdminInputfieldsGetHead
      '$head': AdminInputfieldsGetHead
      '$post': AdminInputfieldsPost
      'all': {
        $url: {}
        $get: AdminInputfieldsAllGetHead
        $head: AdminInputfieldsAllGetHead
      }
      'connect': {
        $url: {}
        $post: AdminInputfieldsConnectPost
      }
      'disconnect': {
        ':id': {
          $url: {}
          $delete: AdminInputfieldsDisconnectIdDelete
        }
      }
      ':id': {
        $url: {}
        $patch: AdminInputfieldsIdPatch
        $delete: AdminInputfieldsIdDelete
      }
    }
    'product-sub-categories': {
      '$url': {}
      '$post': AdminProductsubcategoriesPost
      ':id': {
        $url: {}
        $get: AdminProductsubcategoriesIdGetHead
        $head: AdminProductsubcategoriesIdGetHead
        $patch: AdminProductsubcategoriesIdPatch
        $delete: AdminProductsubcategoriesIdDelete
      }
    }
    'products': {
      '$url': {}
      '$post': AdminProductsPost
      'all': {
        $url: {}
        $get: AdminProductsAllGetHead
        $head: AdminProductsAllGetHead
      }
      ':id': {
        $url: {}
        $get: AdminProductsIdGetHead
        $head: AdminProductsIdGetHead
        $patch: AdminProductsIdPatch
        $delete: AdminProductsIdDelete
      }
    }
  }
}
const routes = [
  {
    params: [],
    name: 'auth.register',
    path: '/auth/register',
    method: ['GET', 'HEAD'],
    types: {} as AuthRegisterGetHead,
  },
  {
    params: [],
    name: 'auth.postRegister',
    path: '/auth/register',
    method: ['POST'],
    types: {} as AuthRegisterPost,
  },
  {
    params: [],
    name: 'auth.login',
    path: '/auth/login',
    method: ['GET', 'HEAD'],
    types: {} as AuthLoginGetHead,
  },
  {
    params: [],
    name: 'auth.postLogin',
    path: '/auth/login',
    method: ['POST'],
    types: {} as AuthLoginPost,
  },
  {
    params: [],
    name: 'auth.logout',
    path: '/auth/logout',
    method: ['GET', 'HEAD'],
    types: {} as AuthLogoutGetHead,
  },
  {
    params: [],
    name: 'home.index',
    path: '/admin',
    method: ['GET', 'HEAD'],
    types: {} as AdminGetHead,
  },
  {
    params: [],
    name: 'users.me',
    path: '/admin/users/me',
    method: ['GET', 'HEAD'],
    types: {} as AdminUsersMeGetHead,
  },
  {
    params: [],
    name: 'users.index',
    path: '/admin/users',
    method: ['GET', 'HEAD'],
    types: {} as AdminUsersGetHead,
  },
  {
    params: [],
    name: 'users.store',
    path: '/admin/users',
    method: ['POST'],
    types: {} as AdminUsersPost,
  },
  {
    params: ['id'],
    name: 'users.delete',
    path: '/admin/users/:id',
    method: ['DELETE'],
    types: {} as AdminUsersIdDelete,
  },
  {
    params: ['id'],
    name: 'users.update',
    path: '/admin/users/:id',
    method: ['PATCH'],
    types: {} as AdminUsersIdPatch,
  },
  {
    params: [],
    name: 'productCategories.index',
    path: '/admin/product-categories',
    method: ['GET', 'HEAD'],
    types: {} as AdminProductcategoriesGetHead,
  },
  {
    params: [],
    name: 'productCategories.create',
    path: '/admin/product-categories/create',
    method: ['GET', 'HEAD'],
    types: {} as AdminProductcategoriesCreateGetHead,
  },
  {
    params: [],
    name: 'productCategories.postCreate',
    path: '/admin/product-categories/create',
    method: ['POST'],
    types: {} as AdminProductcategoriesCreatePost,
  },
  {
    params: ['id'],
    name: 'productCategories.detail',
    path: '/admin/product-categories/:id',
    method: ['GET', 'HEAD'],
    types: {} as AdminProductcategoriesIdGetHead,
  },
  {
    params: ['id'],
    name: 'productCategories.postEdit',
    path: '/admin/product-categories/:id',
    method: ['PATCH'],
    types: {} as AdminProductcategoriesIdPatch,
  },
  {
    params: ['id'],
    name: 'productCategories.delete',
    path: '/admin/product-categories/:id',
    method: ['DELETE'],
    types: {} as AdminProductcategoriesIdDelete,
  },
  {
    params: [],
    name: 'fileManagers.list',
    path: '/admin/file-managers',
    method: ['GET', 'HEAD'],
    types: {} as AdminFilemanagersGetHead,
  },
  {
    params: ['id'],
    name: 'fileManagers.delete',
    path: '/admin/file-managers/:id',
    method: ['DELETE'],
    types: {} as AdminFilemanagersIdDelete,
  },
  {
    params: [],
    name: 'fileManagers.upload',
    path: '/admin/file-managers/upload',
    method: ['POST'],
    types: {} as AdminFilemanagersUploadPost,
  },
  {
    params: ['id'],
    name: 'fileManagers.getById',
    path: '/admin/file-managers/:id',
    method: ['GET', 'HEAD'],
    types: {} as AdminFilemanagersIdGetHead,
  },
  {
    params: [],
    name: 'inputFields.index',
    path: '/admin/input-fields',
    method: ['GET', 'HEAD'],
    types: {} as AdminInputfieldsGetHead,
  },
  {
    params: [],
    name: 'inputFields.postCreate',
    path: '/admin/input-fields',
    method: ['POST'],
    types: {} as AdminInputfieldsPost,
  },
  {
    params: [],
    name: 'inputFields.getAll',
    path: '/admin/input-fields/all',
    method: ['GET', 'HEAD'],
    types: {} as AdminInputfieldsAllGetHead,
  },
  {
    params: [],
    name: 'inputFields.postConnect',
    path: '/admin/input-fields/connect',
    method: ['POST'],
    types: {} as AdminInputfieldsConnectPost,
  },
  {
    params: ['id'],
    name: 'inputFields.postDisconnect',
    path: '/admin/input-fields/disconnect/:id',
    method: ['DELETE'],
    types: {} as AdminInputfieldsDisconnectIdDelete,
  },
  {
    params: ['id'],
    name: 'inputFields.postUpdate',
    path: '/admin/input-fields/:id',
    method: ['PATCH'],
    types: {} as AdminInputfieldsIdPatch,
  },
  {
    params: ['id'],
    name: 'inputFields.delete',
    path: '/admin/input-fields/:id',
    method: ['DELETE'],
    types: {} as AdminInputfieldsIdDelete,
  },
  {
    params: [],
    name: 'productSubCategories.postCreate',
    path: '/admin/product-sub-categories',
    method: ['POST'],
    types: {} as AdminProductsubcategoriesPost,
  },
  {
    params: ['id'],
    name: 'productSubCategories.detail',
    path: '/admin/product-sub-categories/:id',
    method: ['GET', 'HEAD'],
    types: {} as AdminProductsubcategoriesIdGetHead,
  },
  {
    params: ['id'],
    name: 'productSubCategories.postUpdate',
    path: '/admin/product-sub-categories/:id',
    method: ['PATCH'],
    types: {} as AdminProductsubcategoriesIdPatch,
  },
  {
    params: ['id'],
    name: 'productSubCategories.delete',
    path: '/admin/product-sub-categories/:id',
    method: ['DELETE'],
    types: {} as AdminProductsubcategoriesIdDelete,
  },
  {
    params: [],
    name: 'products.postCreate',
    path: '/admin/products',
    method: ['POST'],
    types: {} as AdminProductsPost,
  },
  {
    params: [],
    name: 'products.getAll',
    path: '/admin/products/all',
    method: ['GET', 'HEAD'],
    types: {} as AdminProductsAllGetHead,
  },
  {
    params: ['id'],
    name: 'products.detail',
    path: '/admin/products/:id',
    method: ['GET', 'HEAD'],
    types: {} as AdminProductsIdGetHead,
  },
  {
    params: ['id'],
    name: 'products.postEdit',
    path: '/admin/products/:id',
    method: ['PATCH'],
    types: {} as AdminProductsIdPatch,
  },
  {
    params: ['id'],
    name: 'products.delete',
    path: '/admin/products/:id',
    method: ['DELETE'],
    types: {} as AdminProductsIdDelete,
  },
] as const
export const api = {
  routes,
  definition: {} as ApiDefinition,
}
